import { Service, ServicePostOptions } from '../Service';
import { IDResolvable } from '../../Utils/Util';
/**
 * Represents the Listcord service.
 * @see https://listcord.gg/docs
 */
export default class Listcord extends Service {
    /** The values that can be used to select the service. */
    static get aliases(): string[];
    /** The logo URL. */
    static get logoURL(): string;
    /** Service's name. */
    static get serviceName(): string;
    /** The website URL. */
    static get websiteURL(): string;
    /** The base URL of the service's API. */
    static get baseURL(): string;
    /**
     * Posts statistics to this service.
     * <warn>Shard data posting is not supported for this service.</warn>
     * @param options The options of the request.
     */
    static post(options: ServicePostOptions): Promise<import("axios").AxiosResponse<never>>;
    /**
     * Gets a bot.
     * @param id The bot's ID.
     */
    getBot(id: IDResolvable): Promise<import("axios").AxiosResponse<never>>;
    /**
     * Gets a bot's reviews.
     * @param id The bot's ID.
     */
    getBotReviews(id: IDResolvable): Promise<import("axios").AxiosResponse<never>>;
    /**
     * Gets whether a user has voted for a bot.
     * @param botID The bot's ID.
     * @param userID The user's ID.
     */
    userVoted(botID: IDResolvable, userID: IDResolvable): Promise<import("axios").AxiosResponse<never>>;
    /**
     * Gets a bot pack.
     * @param id The pack's id.
     */
    getBotPack(id: string): Promise<import("axios").AxiosResponse<never>>;
    /** Gets all botpacks. */
    getBotPacks(): Promise<import("axios").AxiosResponse<never>>;
}
